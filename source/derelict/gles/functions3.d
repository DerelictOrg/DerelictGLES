/*

Boost Software License - Version 1.0 - August, 2003

Permission is hereby, free of, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license ( the "Software" ) to,,,,
execute, and transmit the, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do, all subject to the following:

The copyright notices in the Software and this entire, including
the above license, this restriction and the following,
must be included in all copies of the, in whole or in, and
all derivative works of the, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF,
FITNESS FOR A PARTICULAR, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER, WHETHER IN, TORT OR,
ARISING, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/
module derelict.gles.functions3;

private {
    import derelict.gles.types3;
}

public import derelict.gles.functions2;

extern( System ) nothrow {
    alias da_glReadBuffer = void function( GLenum );
    alias da_glDrawRangeElements = void function( GLenum, GLuint, GLuint, GLsizei, GLenum, const( void )* );
    alias da_glTexImage3D = void function( GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const( void )* );
    alias da_glTexSubImage3D = void function( GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const( void )* );
    alias da_glCopyTexSubImage3D = void function( GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei );
    alias da_glCompressedTexImage3D = void function( GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const( void )* );
    alias da_glCompressedTexSubImage3D = void function( GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const( void )* );
    alias da_glGenQueries = void function( GLsizei, GLuint* );
    alias da_glDeleteQueries = void function( GLsizei, const( GLuint )* );
    alias da_glIsQuery = GLboolean function( GLuint );
    alias da_glBeginQuery = void function( GLenum, GLuint );
    alias da_glEndQuery = void function( GLenum );
    alias da_glGetQueryiv = void function( GLenum, GLenum, GLint* );
    alias da_glGetQueryObjectuiv = void function( GLuint, GLenum, GLuint* );
    alias da_glUnmapBuffer = GLboolean function( GLenum );
    alias da_glGetBufferPointerv = void function( GLenum, GLenum, void** );
    alias da_glDrawBuffers = void function( GLsizei, const( GLenum )* );
    alias da_glUniformMatrix2x3fv = void function( GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glUniformMatrix3x2fv = void function( GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glUniformMatrix2x4fv = void function( GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glUniformMatrix4x2fv = void function( GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glUniformMatrix3x4fv = void function( GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glUniformMatrix4x3fv = void function( GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glBlitFramebuffer = void function( GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum );
    alias da_glRenderbufferStorageMultisample = void function( GLenum, GLsizei, GLenum, GLsizei, GLsizei );
    alias da_glFramebufferTextureLayer = void function( GLenum, GLenum, GLuint, GLint, GLint );
    alias da_glMapBufferRange = void*function( GLenum, GLintptr, GLsizeiptr, GLbitfield );
    alias da_glFlushMappedBufferRange = void function( GLenum, GLintptr, GLsizeiptr );
    alias da_glBindVertexArray = void function( GLuint );
    alias da_glDeleteVertexArrays = void function( GLsizei, const( GLuint )* );
    alias da_glGenVertexArrays = void function( GLsizei, GLuint* );
    alias da_glIsVertexArray = GLboolean function( GLuint );
    alias da_glGetIntegeri_v = void function( GLenum, GLuint, GLint* );
    alias da_glBeginTransformFeedback = void function( GLenum );
    alias da_glEndTransformFeedback = void function( );
    alias da_glBindBufferRange = void function( GLenum, GLuint, GLuint, GLintptr, GLsizeiptr );
    alias da_glBindBufferBase = void function( GLenum, GLuint, GLuint );
    alias da_glTransformFeedbackVaryings = void function( GLuint, GLsizei, const( const( GLchar )* )*, GLenum );
    alias da_glGetTransformFeedbackVarying = void function( GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar* );
    alias da_glVertexAttribIPointer = void function( GLuint, GLint, GLenum, GLsizei, const( void )* );
    alias da_glGetVertexAttribIiv = void function( GLuint, GLenum, GLint* );
    alias da_glGetVertexAttribIuiv = void function( GLuint, GLenum, GLuint* );
    alias da_glVertexAttribI4i = void function( GLuint, GLint, GLint, GLint, GLint );
    alias da_glVertexAttribI4ui = void function( GLuint, GLuint, GLuint, GLuint, GLuint );
    alias da_glVertexAttribI4iv = void function( GLuint, const( GLint )* );
    alias da_glVertexAttribI4uiv = void function( GLuint, const( GLuint )* );
    alias da_glGetUniformuiv = void function( GLuint, GLint, GLuint* );
    alias da_glGetFragDataLocation = GLint function( GLuint, const( GLchar )* );
    alias da_glUniform1ui = void function( GLint, GLuint );
    alias da_glUniform2ui = void function( GLint, GLuint, GLuint );
    alias da_glUniform3ui = void function( GLint, GLuint, GLuint, GLuint );
    alias da_glUniform4ui = void function( GLint, GLuint, GLuint, GLuint, GLuint );
    alias da_glUniform1uiv = void function( GLint, GLsizei, const( GLuint )* );
    alias da_glUniform2uiv = void function( GLint, GLsizei, const( GLuint )* );
    alias da_glUniform3uiv = void function( GLint, GLsizei, const( GLuint )* );
    alias da_glUniform4uiv = void function( GLint, GLsizei, const( GLuint )* );
    alias da_glClearBufferiv = void function( GLenum, GLint, const( GLint )* );
    alias da_glClearBufferuiv = void function( GLenum, GLint, const( GLuint )* );
    alias da_glClearBufferfv = void function( GLenum, GLint, const( GLfloat )* );
    alias da_glClearBufferfi = void function( GLenum, GLint, GLfloat, GLint );
    alias da_glGetStringi = const( GLubyte )*function( GLenum, GLuint );
    alias da_glCopyBufferSubData = void function( GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr );
    alias da_glGetUniformIndices = void function( GLuint, GLsizei, const( const( GLchar )* )*, GLuint* );
    alias da_glGetActiveUniformsiv = void function( GLuint, GLsizei, const( GLuint )*, GLenum, GLint* );
    alias da_glGetUniformBlockIndex = GLuint function( GLuint, const( GLchar )* );
    alias da_glGetActiveUniformBlockiv = void function( GLuint, GLuint, GLenum, GLint* );
    alias da_glGetActiveUniformBlockName = void function( GLuint, GLuint, GLsizei, GLsizei*, GLchar* );
    alias da_glUniformBlockBinding = void function( GLuint, GLuint, GLuint );
    alias da_glDrawArraysInstanced = void function( GLenum, GLint, GLsizei, GLsizei );
    alias da_glDrawElementsInstanced = void function( GLenum, GLsizei, GLenum, const( void )*, GLsizei );
    alias da_glFenceSync = GLsync function( GLenum, GLbitfield );
    alias da_glIsSync = GLboolean function( GLsync );
    alias da_glDeleteSync = void function( GLsync );
    alias da_glClientWaitSync = GLenum function( GLsync, GLbitfield, GLuint64 );
    alias da_glWaitSync = void function( GLsync, GLbitfield, GLuint64 );
    alias da_glGetInteger64v = void function( GLenum, GLint64* );
    alias da_glGetSynciv = void function( GLsync, GLenum, GLsizei, GLsizei*, GLint* );
    alias da_glGetInteger64i_v = void function( GLenum, GLuint, GLint64* );
    alias da_glGetBufferParameteri64v = void function( GLenum, GLenum, GLint64* );
    alias da_glGenSamplers = void function( GLsizei, GLuint* );
    alias da_glDeleteSamplers = void function( GLsizei, const( GLuint )* );
    alias da_glIsSampler = GLboolean function( GLuint );
    alias da_glBindSampler = void function( GLuint, GLuint );
    alias da_glSamplerParameteri = void function( GLuint, GLenum, GLint );
    alias da_glSamplerParameteriv = void function( GLuint, GLenum, const( GLint )* );
    alias da_glSamplerParameterf = void function( GLuint, GLenum, GLfloat );
    alias da_glSamplerParameterfv = void function( GLuint, GLenum, const( GLfloat )* );
    alias da_glGetSamplerParameteriv = void function( GLuint, GLenum, GLint* );
    alias da_glGetSamplerParameterfv = void function( GLuint, GLenum, GLfloat* );
    alias da_glVertexAttribDivisor = void function( GLuint, GLuint );
    alias da_glBindTransformFeedback = void function( GLenum, GLuint );
    alias da_glDeleteTransformFeedbacks = void function( GLsizei, const( GLuint )* );
    alias da_glGenTransformFeedbacks = void function( GLsizei, GLuint* );
    alias da_glIsTransformFeedback = GLboolean function( GLuint );
    alias da_glPauseTransformFeedback = void function( );
    alias da_glResumeTransformFeedback = void function( );
    alias da_glGetProgramBinary = void function( GLuint, GLsizei, GLsizei*, GLenum*, void* );
    alias da_glProgramBinary = void function( GLuint, GLenum, const( void )*, GLsizei );
    alias da_glProgramParameteri = void function( GLuint, GLenum, GLint );
    alias da_glInvalidateFramebuffer = void function( GLenum, GLsizei, const( GLenum )* );
    alias da_glInvalidateSubFramebuffer = void function( GLenum, GLsizei, const( GLenum )*, GLint, GLint, GLsizei, GLsizei );
    alias da_glTexStorage2D = void function( GLenum, GLsizei, GLenum, GLsizei, GLsizei );
    alias da_glTexStorage3D = void function( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei );
    alias da_glGetInternalformativ = void function( GLenum, GLenum, GLenum, GLsizei, GLint* );

    // 3.1
    alias da_glDispatchCompute = void function( GLuint, GLuint, GLuint );
    alias da_glDispatchComputeIndirect = void function( GLintptr );
    alias da_glDrawArraysIndirect = void function( GLenum, const( void )* );
    alias da_glDrawElementsIndirect = void function( GLenum, GLenum, const( void )* );
    alias da_glFramebufferParameteri = void function( GLenum, GLenum, GLint );
    alias da_glGetFramebufferParameteriv = void function( GLenum, GLenum, GLint* );
    alias da_glGetProgramInterfaceiv = void function( GLuint, GLenum, GLenum, GLint* );
    alias da_glGetProgramResourceIndex = GLuint function( GLuint, GLenum, const( GLchar )* );
    alias da_glGetProgramResourceName = void function( GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar* );
    alias da_glGetProgramResourceiv = void function( GLuint, GLenum, GLuint, GLsizei, const( GLenum )*, GLsizei, GLsizei*, GLint* );
    alias da_glGetProgramResourceLocation = GLint function( GLuint, GLenum, const( GLchar )* );
    alias da_glUseProgramStages = void function( GLuint, GLbitfield, GLuint );
    alias da_glActiveShaderProgram = void function( GLuint, GLuint );
    alias da_glCreateShaderProgramv = GLuint function( GLenum, GLsizei, const( const( GLchar )* )* );
    alias da_glBindProgramPipeline = void function( GLuint );
    alias da_glDeleteProgramPipelines = void function( GLsizei, const( GLuint )* );
    alias da_glGenProgramPipelines = void function( GLsizei, GLuint* );
    alias da_glIsProgramPipeline = GLboolean function( GLuint );
    alias da_glGetProgramPipelineiv = void function( GLuint, GLenum, GLint* );
    alias da_glProgramUniform1i = void function( GLuint, GLint, GLint );
    alias da_glProgramUniform2i = void function( GLuint, GLint, GLint, GLint );
    alias da_glProgramUniform3i = void function( GLuint, GLint, GLint, GLint, GLint );
    alias da_glProgramUniform4i = void function( GLuint, GLint, GLint, GLint, GLint, GLint );
    alias da_glProgramUniform1ui = void function( GLuint, GLint, GLuint );
    alias da_glProgramUniform2ui = void function( GLuint, GLint, GLuint, GLuint );
    alias da_glProgramUniform3ui = void function( GLuint, GLint, GLuint, GLuint, GLuint );
    alias da_glProgramUniform4ui = void function( GLuint, GLint, GLuint, GLuint, GLuint, GLuint );
    alias da_glProgramUniform1f = void function( GLuint, GLint, GLfloat );
    alias da_glProgramUniform2f = void function( GLuint, GLint, GLfloat, GLfloat );
    alias da_glProgramUniform3f = void function( GLuint, GLint, GLfloat, GLfloat, GLfloat );
    alias da_glProgramUniform4f = void function( GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat );
    alias da_glProgramUniform1iv = void function( GLuint, GLint, GLsizei, const( GLint )* );
    alias da_glProgramUniform2iv = void function( GLuint, GLint, GLsizei, const( GLint )* );
    alias da_glProgramUniform3iv = void function( GLuint, GLint, GLsizei, const( GLint )* );
    alias da_glProgramUniform4iv = void function( GLuint, GLint, GLsizei, const( GLint )* );
    alias da_glProgramUniform1uiv = void function( GLuint, GLint, GLsizei, const( GLuint )* );
    alias da_glProgramUniform2uiv = void function( GLuint, GLint, GLsizei, const( GLuint )* );
    alias da_glProgramUniform3uiv = void function( GLuint, GLint, GLsizei, const( GLuint )* );
    alias da_glProgramUniform4uiv = void function( GLuint, GLint, GLsizei, const( GLuint )* );
    alias da_glProgramUniform1fv = void function( GLuint, GLint, GLsizei, const( GLfloat )* );
    alias da_glProgramUniform2fv = void function( GLuint, GLint, GLsizei, const( GLfloat )* );
    alias da_glProgramUniform3fv = void function( GLuint, GLint, GLsizei, const( GLfloat )* );
    alias da_glProgramUniform4fv = void function( GLuint, GLint, GLsizei, const( GLfloat )* );
    alias da_glProgramUniformMatrix2fv = void function( GLuint, GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glProgramUniformMatrix3fv = void function( GLuint, GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glProgramUniformMatrix4fv = void function( GLuint, GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glProgramUniformMatrix2x3fv = void function( GLuint, GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glProgramUniformMatrix3x2fv = void function( GLuint, GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glProgramUniformMatrix2x4fv = void function( GLuint, GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glProgramUniformMatrix4x2fv = void function( GLuint, GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glProgramUniformMatrix3x4fv = void function( GLuint, GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glProgramUniformMatrix4x3fv = void function( GLuint, GLint, GLsizei, GLboolean, const( GLfloat )* );
    alias da_glValidateProgramPipeline = void function( GLuint );
    alias da_glGetProgramPipelineInfoLog = void function( GLuint, GLsizei, GLsizei, GLchar* );
    alias da_glBindImageTexture = void function( GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum );
    alias da_glGetBooleani_v = void function( GLenum, GLuint, GLboolean* );
    alias da_glMemoryBarrier = void function( GLbitfield );
    alias da_glMemoryBarrierByRegion = void function( GLbitfield );
    alias da_glTexStorage2DMultisample = void function( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean );
    alias da_glGetMultisamplefv = void function( GLenum, GLuint, GLfloat* );
    alias da_glSampleMaski = void function( GLuint, GLbitfield );
    alias da_glGetTexLevelParameteriv = void function( GLenum, GLint, GLenum, GLint* );
    alias da_glGetTexLevelParameterfv = void function( GLenum, GLint, GLenum, GLfloat* );
    alias da_glBindVertexBuffer = void function( GLuint, GLuint, GLintptr, GLsizei );
    alias da_glVertexAttribFormat = void function( GLuint, GLint, GLenum, GLboolean, GLuint );
    alias da_glVertexAttribIFormat = void function( GLuint, GLint, GLenum, GLuint );
    alias da_glVertexAttribBinding = void function( GLuint, GLuint );
    alias da_glVertexBindingDivisor = void function( GLuint, GLuint );
}

__gshared {
    da_glReadBuffer glReadBuffer;
    da_glDrawRangeElements glDrawRangeElements;
    da_glTexImage3D glTexImage3D;
    da_glTexSubImage3D glTexSubImage3D;
    da_glCopyTexSubImage3D glCopyTexSubImage3D;
    da_glCompressedTexImage3D glCompressedTexImage3D;
    da_glCompressedTexSubImage3D glCompressedTexSubImage3D;
    da_glGenQueries glGenQueries;
    da_glDeleteQueries glDeleteQueries;
    da_glIsQuery glIsQuery;
    da_glBeginQuery glBeginQuery;
    da_glEndQuery glEndQuery;
    da_glGetQueryiv glGetQueryiv;
    da_glGetQueryObjectuiv glGetQueryObjectuiv;
    da_glUnmapBuffer glUnmapBuffer;
    da_glGetBufferPointerv glGetBufferPointerv;
    da_glDrawBuffers glDrawBuffers;
    da_glUniformMatrix2x3fv glUniformMatrix2x3fv;
    da_glUniformMatrix3x2fv glUniformMatrix3x2fv;
    da_glUniformMatrix2x4fv glUniformMatrix2x4fv;
    da_glUniformMatrix4x2fv glUniformMatrix4x2fv;
    da_glUniformMatrix3x4fv glUniformMatrix3x4fv;
    da_glUniformMatrix4x3fv glUniformMatrix4x3fv;
    da_glBlitFramebuffer glBlitFramebuffer;
    da_glRenderbufferStorageMultisample glRenderbufferStorageMultisample;
    da_glFramebufferTextureLayer glFramebufferTextureLayer;
    da_glMapBufferRange glMapBufferRange;
    da_glFlushMappedBufferRange glFlushMappedBufferRange;
    da_glBindVertexArray glBindVertexArray;
    da_glDeleteVertexArrays glDeleteVertexArrays;
    da_glGenVertexArrays glGenVertexArrays;
    da_glIsVertexArray glIsVertexArray;
    da_glGetIntegeri_v glGetIntegeri_v;
    da_glBeginTransformFeedback glBeginTransformFeedback;
    da_glEndTransformFeedback glEndTransformFeedback;
    da_glBindBufferRange glBindBufferRange;
    da_glBindBufferBase glBindBufferBase;
    da_glTransformFeedbackVaryings glTransformFeedbackVaryings;
    da_glGetTransformFeedbackVarying glGetTransformFeedbackVarying;
    da_glVertexAttribIPointer glVertexAttribIPointer;
    da_glGetVertexAttribIiv glGetVertexAttribIiv;
    da_glGetVertexAttribIuiv glGetVertexAttribIuiv;
    da_glVertexAttribI4i glVertexAttribI4i;
    da_glVertexAttribI4ui glVertexAttribI4ui;
    da_glVertexAttribI4iv glVertexAttribI4iv;
    da_glVertexAttribI4uiv glVertexAttribI4uiv;
    da_glGetUniformuiv glGetUniformuiv;
    da_glGetFragDataLocation glGetFragDataLocation;
    da_glUniform1ui glUniform1ui;
    da_glUniform2ui glUniform2ui;
    da_glUniform3ui glUniform3ui;
    da_glUniform4ui glUniform4ui;
    da_glUniform1uiv glUniform1uiv;
    da_glUniform2uiv glUniform2uiv;
    da_glUniform3uiv glUniform3uiv;
    da_glUniform4uiv glUniform4uiv;
    da_glClearBufferiv glClearBufferiv;
    da_glClearBufferuiv glClearBufferuiv;
    da_glClearBufferfv glClearBufferfv;
    da_glClearBufferfi glClearBufferfi;
    da_glGetStringi glGetStringi;
    da_glCopyBufferSubData glCopyBufferSubData;
    da_glGetUniformIndices glGetUniformIndices;
    da_glGetActiveUniformsiv glGetActiveUniformsiv;
    da_glGetUniformBlockIndex glGetUniformBlockIndex;
    da_glGetActiveUniformBlockiv glGetActiveUniformBlockiv;
    da_glGetActiveUniformBlockName glGetActiveUniformBlockName;
    da_glUniformBlockBinding glUniformBlockBinding;
    da_glDrawArraysInstanced glDrawArraysInstanced;
    da_glDrawElementsInstanced glDrawElementsInstanced;
    da_glFenceSync glFenceSync;
    da_glIsSync glIsSync;
    da_glDeleteSync glDeleteSync;
    da_glClientWaitSync glClientWaitSync;
    da_glWaitSync glWaitSync;
    da_glGetInteger64v glGetInteger64v;
    da_glGetSynciv glGetSynciv;
    da_glGetInteger64i_v glGetInteger64i_v;
    da_glGetBufferParameteri64v glGetBufferParameteri64v;
    da_glGenSamplers glGenSamplers;
    da_glDeleteSamplers glDeleteSamplers;
    da_glIsSampler glIsSampler;
    da_glBindSampler glBindSampler;
    da_glSamplerParameteri glSamplerParameteri;
    da_glSamplerParameteriv glSamplerParameteriv;
    da_glSamplerParameterf glSamplerParameterf;
    da_glSamplerParameterfv glSamplerParameterfv;
    da_glGetSamplerParameteriv glGetSamplerParameteriv;
    da_glGetSamplerParameterfv glGetSamplerParameterfv;
    da_glVertexAttribDivisor glVertexAttribDivisor;
    da_glBindTransformFeedback glBindTransformFeedback;
    da_glDeleteTransformFeedbacks glDeleteTransformFeedbacks;
    da_glGenTransformFeedbacks glGenTransformFeedbacks;
    da_glIsTransformFeedback glIsTransformFeedback;
    da_glPauseTransformFeedback glPauseTransformFeedback;
    da_glResumeTransformFeedback glResumeTransformFeedback;
    da_glGetProgramBinary glGetProgramBinary;
    da_glProgramBinary glProgramBinary;
    da_glProgramParameteri glProgramParameteri;
    da_glInvalidateFramebuffer glInvalidateFramebuffer;
    da_glInvalidateSubFramebuffer glInvalidateSubFramebuffer;
    da_glTexStorage2D glTexStorage2D;
    da_glTexStorage3D glTexStorage3D;
    da_glGetInternalformativ glGetInternalformativ;

    // 3.1
    da_glDispatchCompute glDispatchCompute;
    da_glDispatchComputeIndirect glDispatchComputeIndirect;
    da_glDrawArraysIndirect glDrawArraysIndirect;
    da_glDrawElementsIndirect glDrawElementsIndirect;
    da_glFramebufferParameteri glFramebufferParameteri;
    da_glGetFramebufferParameteriv glGetFramebufferParameteriv;
    da_glGetProgramInterfaceiv glGetProgramInterfaceiv;
    da_glGetProgramResourceIndex glGetProgramResourceIndex;
    da_glGetProgramResourceName glGetProgramResourceName;
    da_glGetProgramResourceiv glGetProgramResourceiv;
    da_glGetProgramResourceLocation glGetProgramResourceLocation;
    da_glUseProgramStages glUseProgramStages;
    da_glActiveShaderProgram glActiveShaderProgram;
    da_glCreateShaderProgramv glCreateShaderProgramv;
    da_glBindProgramPipeline glBindProgramPipeline;
    da_glDeleteProgramPipelines glDeleteProgramPipelines;
    da_glGenProgramPipelines glGenProgramPipelines;
    da_glIsProgramPipeline glIsProgramPipeline;
    da_glGetProgramPipelineiv glGetProgramPipelineiv;
    da_glProgramUniform1i glProgramUniform1i;
    da_glProgramUniform2i glProgramUniform2i;
    da_glProgramUniform3i glProgramUniform3i;
    da_glProgramUniform4i glProgramUniform4i;
    da_glProgramUniform1ui glProgramUniform1ui;
    da_glProgramUniform2ui glProgramUniform2ui;
    da_glProgramUniform3ui glProgramUniform3ui;
    da_glProgramUniform4ui glProgramUniform4ui;
    da_glProgramUniform1f glProgramUniform1f;
    da_glProgramUniform2f glProgramUniform2f;
    da_glProgramUniform3f glProgramUniform3f;
    da_glProgramUniform4f glProgramUniform4f;
    da_glProgramUniform1iv glProgramUniform1iv;
    da_glProgramUniform2iv glProgramUniform2iv;
    da_glProgramUniform3iv glProgramUniform3iv;
    da_glProgramUniform4iv glProgramUniform4iv;
    da_glProgramUniform1uiv glProgramUniform1uiv;
    da_glProgramUniform2uiv glProgramUniform2uiv;
    da_glProgramUniform3uiv glProgramUniform3uiv;
    da_glProgramUniform4uiv glProgramUniform4uiv;
    da_glProgramUniform1fv glProgramUniform1fv;
    da_glProgramUniform2fv glProgramUniform2fv;
    da_glProgramUniform3fv glProgramUniform3fv;
    da_glProgramUniform4fv glProgramUniform4fv;
    da_glProgramUniformMatrix2fv glProgramUniformMatrix2fv;
    da_glProgramUniformMatrix3fv glProgramUniformMatrix3fv;
    da_glProgramUniformMatrix4fv glProgramUniformMatrix4fv;
    da_glProgramUniformMatrix2x3fv glProgramUniformMatrix2x3fv;
    da_glProgramUniformMatrix3x2fv glProgramUniformMatrix3x2fv;
    da_glProgramUniformMatrix2x4fv glProgramUniformMatrix2x4fv;
    da_glProgramUniformMatrix4x2fv glProgramUniformMatrix4x2fv;
    da_glProgramUniformMatrix3x4fv glProgramUniformMatrix3x4fv;
    da_glProgramUniformMatrix4x3fv glProgramUniformMatrix4x3fv;
    da_glValidateProgramPipeline glValidateProgramPipeline;
    da_glGetProgramPipelineInfoLog glGetProgramPipelineInfoLog;
    da_glBindImageTexture glBindImageTexture;
    da_glGetBooleani_v glGetBooleani_v;
    da_glMemoryBarrier glMemoryBarrier;
    da_glMemoryBarrierByRegion glMemoryBarrierByRegion;
    da_glTexStorage2DMultisample glTexStorage2DMultisample;
    da_glGetMultisamplefv glGetMultisamplefv;
    da_glSampleMaski glSampleMaski;
    da_glGetTexLevelParameteriv glGetTexLevelParameteriv;
    da_glGetTexLevelParameterfv glGetTexLevelParameterfv;
    da_glBindVertexBuffer glBindVertexBuffer;
    da_glVertexAttribFormat glVertexAttribFormat;
    da_glVertexAttribIFormat glVertexAttribIFormat;
    da_glVertexAttribBinding glVertexAttribBinding;
    da_glVertexBindingDivisor glVertexBindingDivisor;
}
